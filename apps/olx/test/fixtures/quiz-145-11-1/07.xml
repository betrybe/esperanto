<problem>
   <multiplechoiceresponse>
      <label>
         <p>Qual dos blocos de código a seguir utiliza corretamente a sintaxe</p>
         <code>JSX</code>
         <p>para inserir uma lista à aplicação?</p>
      </label>
      <br></br>
      <choicegroup type="MultipleChoice">
         <choice correct="false" ></choice>
      </choicegroup>
      <pre>
         <code>\nconst task = (value, value2) =&gt; {\n  return(\n    &lt;ol className="taskList"&gt;\n      &lt;li&gt;{value}&lt;/li&gt;\n    &lt;/ol&gt;\n    &lt;ol className="taskList2"&gt;\n      &lt;li&gt;{value2}&lt;/li&gt;\n    &lt;/ol&gt;\n  )\n}\n</code>
      </pre>
      <choicehint>
         <p>Essa alternativa faz uso incorreto da sintaxe</p>
         <code>JSX</code>
         <p>, em que a função retorna mais de um nó</p>
         <code>React</code>
         <p>. Expressões</p>
         <code>JSX</code>
         <p>devem retornar apenas um</p>
         <em>
            <p>"elemento pai/mãe"</p>
         </em>
         <p>, que, se necessário, pode encapsular várias</p>
         <code>tags</code>
         <p>ou</p>
         <em>
            <p>"elementos filhos"</p>
         </em>
         <p>.</p>
      </choicehint>
      <br></br>
      <choicegroup type="MultipleChoice">
         <choice correct="false" />
      </choicegroup>
      <pre>
         <code>\nconst task = (value) =&gt; {\n  const list = document.querySelector('.taskList');\n  const item = document.createElement('li');\n  item.innerText = value;\n  list.appendChild(item);\n}\n</code>
      </pre>
      <choicehint>
         <p>Esta alternativa está incorreta, pois corresponde à criação de uma lista com</p>
         <code>JavaScript</code>
         <p>puro, o que podemos notar pelo uso dos métodos</p>
         <code>createElement</code>
         <p>e</p>
         <code>appendChild</code>
         <p>.</p>
      </choicehint>
      <choicegroup type="MultipleChoice">
         <choice correct="false" />
      </choicegroup>
      <pre>
         <code>\nconst task = (value) =&gt; {\n  return(\n    &lt;ol class="taskList"&gt;\n      &lt;li&gt;{value}&lt;/li&gt;\n    &lt;/ol&gt;\n  )\n}  \n</code>
      </pre>
      <choicehint>
         <p>Esta alternativa está incorreta por usar erroneamente a palavra</p>
         <code>class</code>
         <p>para adicionar classes</p>
         <code>CSS</code>
         <p>. Esta palavra é restrita para a criação de</p>
         <strong>
            <p>componentes de classe</p>
         </strong>
         <p>no</p>
         <code>React</code>
         <p>.</p>
      </choicehint>
      <br></br>
      <choicegroup type="MultipleChoice">
         <choice correct="false" />
      </choicegroup>
      <pre>
         <code>\n&lt;ol class="taskList"&gt;\n  &lt;li&gt;item 1&lt;/li&gt;\n&lt;/ol&gt;\n</code>
      </pre>
      <choicehint>
         <p>Alternativa incorreta. Essa sintaxe apresenta a criação de uma lista diretamente no</p>
         <code>HTML</code>
         <p>, de forma estática.</p>
      </choicehint>
      <br></br>
      <choicegroup type="MultipleChoice">
         <choice correct="true" />
      </choicegroup>
      <pre>
         <code>\nconst task = (value) =&gt; {\n  return(\n    &lt;ol className="taskList"&gt;\n      &lt;li&gt;{value}&lt;/li&gt;\n    &lt;/ol&gt;\n  )\n}\n</code>
      </pre>
      <choicehint>
         <p>Uso correto da sintaxe</p>
         <code>JSX</code>
         <p>, que permite inserir lógica dentro de códigos</p>
         <code>HTML</code>
         <p>, desde que só retorne um nó</p>
         <code>React</code>
         <p>e usando a palavra</p>
         <code>className</code>
         <p>para adicionar classes</p>
         <code>CSS</code>
         <p>.</p>
      </choicehint>
   </multiplechoiceresponse>
</problem>

